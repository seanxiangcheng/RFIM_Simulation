str(ls)
x <- matrix(1:9, 3,3)
str(x)
str(str)
str(lm)
summary(x)
?summary
library(datasets)
str(airquality)
str(airquality)
str(airquality)
x <- split(airquality, airquality$Month)
str(x)
dnorm(10, 10, 1)
dnorm(10, 10, 2)
dnorm(10, 10, 4)
dnorm(10, 0, 4)
dnorm(10, 0, 10)
pnorm(10, 0, 10)
pnorm(10, 0, 1)
pnorm(10, 0, 2)
pnorm(10, 0, 3)
pnorm(10, 6, 3)
str(rpois)
rpois(10, 1)
read.xls?
;
?read.xls
library(xlsx)
install.library(xlsx)
install.packages(xlsx)
install.packages("xlsx")
install.packages("xlsx", dependencies=TRUE)
install.packages("ggplot2", dependencies=TRUE)
library(xlsx)
library("xlsx")
install.packages("rJava")
install.packages("rJava", dependencies=TRUE)
library("xlsx")
install.packages("rJava", dependencies=TRUE)
library(xlsx)
library(rJava)
R.Version()
install.packages("stats4", dependencies=TRUE)
install.packages("splines", dependencies=TRUE)
library(BiodiversityR)
library(vegan)
data(dune)
distmatrix = vegdist(dune, method='bray')
Ordination.model3 <- cmdscale(distmatrix, k=nrow(dune)-1,eig=T, add=F)
Ordination.model3 <- add.spec.scores( Ordination.model3, dune, method='coa.scores', Rscale=T, scaling=1, multi=1)
plot4 <- ordiplot(Ordination.model3, type='text')
library(vegan)
data(dune)
distmatrix <- vegdist(dune, method='euc')
## Principal coordinates analysis with 19 axes to estimate total variance
Ordination.model1 <- cmdscale(distmatrix, k=19, eig=TRUE, add=FALSE)
Ordination.model1 <- add.spec.scores(Ordination.model1,dune,
method='pcoa.scores', Rscale=TRUE, scaling=1, multi=1)
Ordination.model1
## Compare Ordination.model1 with:
Ordination.model2 <- rda(dune)
summary(Ordination.model2, scaling=1)
ordiplot(Ordination.model2, type='text')
library(vegan)
data(dune)
distmatrix <- vegdist(dune, method='bray')
## Principal coordinates analysis with 19 axes to estimate total variance
Ordination.model1 <- cmdscale(distmatrix, k=19, eig=TRUE, add=FALSE)
Ordination.model1 <- add.spec.scores(Ordination.model1,dune,
method='pcoa.scores', Rscale=TRUE, scaling=1, multi=1)
Ordination.model1
## Compare Ordination.model1 with:
Ordination.model2 <- rda(dune)
summary(Ordination.model2, scaling=1)
ordiplot(Ordination.model2, type='text')
?rda
library(vegan)
data(dune)
distmatrix <- vegdist(dune, method='bray')
## Principal coordinates analysis with 19 axes to estimate total variance
Ordination.model1 <- cmdscale(distmatrix, k=19, eig=TRUE, add=FALSE)
#Ordination.model1 <- add.spec.scores(Ordination.model1,dune,
#                                     method='pcoa.scores', Rscale=TRUE, scaling=1, multi=1)
Ordination.model1
## Compare Ordination.model1 with:
#Ordination.model2 <- rda(dune)
summary(Ordination.model1, scaling=1)
ordiplot(Ordination.model1, type='text')
Ordination.model1 <- add.spec.scores(Ordination.model1,dune,
method='pcoa.scores', Rscale=TRUE, scaling=1, multi=1)
library(vegan)
data(dune)
distmatrix <- vegdist(dune, method='bray')
## Principal coordinates analysis with 19 axes to estimate total variance
Ordination.model1 <- cmdscale(distmatrix, k=19, eig=TRUE, add=FALSE)
Ordination.model1 <- add.spec.scores(Ordination.model1,dune,
method='pcoa.scores', Rscale=TRUE, scaling=1, multi=1)
Ordination.model1
## Compare Ordination.model1 with:
#Ordination.model2 <- rda(dune)
summary(Ordination.model1, scaling=1)
ordiplot(Ordination.model1, type='text')
data(dune)
distmatrix <- vegdist(dune, method='ecu')
## Principal coordinates analysis with 19 axes to estimate total variance
Ordination.model1 <- cmdscale(distmatrix, k=19, eig=TRUE, add=FALSE)
Ordination.model1 <- add.spec.scores(Ordination.model1,dune,
method='pcoa.scores', Rscale=TRUE, scaling=1, multi=1)
Ordination.model1
## Compare Ordination.model1 with:
#Ordination.model2 <- rda(dune)
summary(Ordination.model1, scaling=1)
ordiplot(Ordination.model1, type='text')
summary(Ordination.model1, scaling=1)
library(vegan)
data(dune)
distmatrix <- vegdist(dune, method='bray')
## Principal coordinates analysis with 19 axes to estimate total variance
Ordination.model1 <- cmdscale(distmatrix, k=19, eig=TRUE, add=FALSE)
Ordination.model1 <- add.spec.scores(Ordination.model1,dune,
method='pcoa.scores', Rscale=TRUE, scaling=1, multi=1)
Ordination.model1
## Compare Ordination.model1 with:
#Ordination.model2 <- rda(dune)
summary(Ordination.model1)
ordiplot(Ordination.model1, type='text')
library(vegan)
data(dune)
distmatrix <- vegdist(dune, method='bray')
## Principal coordinates analysis with 19 axes to estimate total variance
Ordination.model1 <- cmdscale(distmatrix, k=19, eig=TRUE, add=FALSE)
Ordination.model1 <- add.spec.scores(Ordination.model1, dune,
method='pcoa.scores', Rscale=TRUE, scaling=1, multi=1)
Ordination.model1
## Compare Ordination.model1 with:
Ordination.model2 <- rda(dune)
summary(Ordination.model1)
ordiplot(Ordination.model1, type='text')
?cmdscale
data("dune")
diversity(dune)
datafilename="http://personality-project.org/R/datasets/R.appendix1.data"
data.ex1=read.table(datafilename,header=T)   #read the data into a table
datafilename="http://personality-project.org/r/datasets/R.appendix3.data"
data.ex3=read.table(datafilename,header=T)   #read the data into a table
View(data.ex3)
data.ex3                                      #show the data
datafilename="http://personality-project.org/R/datasets/R.appendix1.data"
data.ex1=read.table(datafilename,header=T)
datafilename="http://personality-project.org/r/datasets/R.appendix1.data"
data.ex1=read.table(datafilename,header=T)
View(data.ex1)
View(data.ex1)
aov.ex1 = aov(Alertness~Dosage,data=data.ex1)  #do the analysis of variance
summary(aov.ex1)                                    #show the summary table
datafilename="http://personality-project.org/r/datasets/R.appendix2.data"
data.ex2=read.table(datafilename,header=T)   #read the data into a table
data.ex2
aov.ex2 = aov(Alertness~Gender*Dosage,data=data.ex2)         #do the analysis of variance
summary(aov.ex2)
print(model.tables(aov.ex1,"means"),digits=3)       #report the means and the number of subjects/cell
boxplot(Alertness~Dosage,data=data.ex1)        #graphical summary
print(model.tables(aov.ex2,"means"),digits=3)       #report the means and the number of subjects/cell
dirname()
dirname("data_explore.R")
dirname("data_explore.R")
setwd("C:\Users\Xiang\Google Drive\Research\RFIM_Simulation\Simulation\figs_code")
setwd("C:\\Users\\Xiang\\Google Drive\\Research\\RFIM_Simulation\\Simulation\\figs_code")
dirname("data_explore.R")
med = read.csv(mfn)
mfn = "..\data\MED_L64_T0.1_shi1.0_sHi0.32_r1000_sqT.csv"
med = read.csv(mfn)
mfn = "..\\data\\MED_L64_T0.1_shi1.0_sHi0.32_r1000_sqT.csv"
med = read.csv(mfn)
med = read.csv(mfn, sep=',')
med = read.csv(mfn, sep=',', skip=1)
source('C:/Users/Xiang/Google Drive/Research/RFIM_Simulation/Simulation/figs_code/data_explore.R')
View(med)
str(med)
plot(mc_step, mag, data=med)
with(med, plot(mc_step, mag) )
with(med, plot(mc_step, energy) )
with(med, plot(mc_step, domain_len) )
mfn = "..\\data\\MED_L128_T0.1_shi1.0_sHi0.32_r1000_sqT.csv"
med = read.csv(mfn, sep=',', skip=1)
mfn = "..\\data\\MED_L128_T0.1_shi1.0_sHi0.32_r200_sqT.csv"
med = read.csv(mfn, sep=',', skip=1)
with(med, plot(mc_step, mag) )
with(med, plot(mc_step, energy) )
with(med, plot(mc_step, domain_len) )
